<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Guimin's Blog]]></title>
  <link href="http://tech.lincank.info/atom.xml" rel="self"/>
  <link href="http://tech.lincank.info/"/>
  <updated>2015-08-31T22:01:11+08:00</updated>
  <id>http://tech.lincank.info/</id>
  <author>
    <name><![CDATA[Guimin Lin/林桂民]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup Your Ghost]]></title>
    <link href="http://tech.lincank.info/blog/2015/08/31/setup-your-ghost/"/>
    <updated>2015-08-31T21:45:00+08:00</updated>
    <id>http://tech.lincank.info/blog/2015/08/31/setup-your-ghost</id>
    <content type="html"><![CDATA[<p>just a test for me</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[create zip file on the fly with rubyzip]]></title>
    <link href="http://tech.lincank.info/blog/2013/04/08/create-zip-file-on-the-fly-with-rubyzip/"/>
    <updated>2013-04-08T23:13:00+08:00</updated>
    <id>http://tech.lincank.info/blog/2013/04/08/create-zip-file-on-the-fly-with-rubyzip</id>
    <content type="html"><![CDATA[<p>I tries to create zip file with multiple files in it, on the fly of course. I refered to <a href="http://info.michael-simons.eu/2008/01/21/using-rubyzip-to-create-zip-files-on-the-fly/">this post</a>, but it does not work for me. I search and try for hours, and figure out one solution.</p>

<!-- more -->


<p>Use <code>IO.binread</code> instead of <code>IO.read</code>, and it just works! Here is the sample code:</p>

<figure class='code'><figcaption><span>Zip With Rubyzip On The Fly</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="nb">require</span> <span class="s1">&#39;zip/zip&#39;</span>
</span><span class='line'>  <span class="nb">require</span> <span class="s1">&#39;zip/zipfilesystem&#39;</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">t</span> <span class="o">=</span> <span class="no">Tempfile</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="s2">&quot;some-weird-temp-file-basename-</span><span class="si">#{</span><span class="n">request</span><span class="o">.</span><span class="n">remote_ip</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="c1"># Give the path of the temp file to the zip outputstream, it won&#39;t try to open it as an archive.</span>
</span><span class='line'>  <span class="no">Zip</span><span class="o">::</span><span class="no">ZipOutputStream</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="n">t</span><span class="o">.</span><span class="n">path</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">zos</span><span class="o">|</span>
</span><span class='line'>      <span class="n">some_file_list</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">file</span><span class="o">|</span>
</span><span class='line'>          <span class="c1"># Create a new entry with some arbitrary name</span>
</span><span class='line'>          <span class="n">zos</span><span class="o">.</span><span class="n">put_next_entry</span><span class="p">(</span><span class="s2">&quot;some-funny-name.jpg&quot;</span><span class="p">)</span>
</span><span class='line'>          <span class="c1"># Add the contents of the file, don&#39;t read the stuff linewise if its binary, instead use direct IO</span>
</span><span class='line'>          <span class="c1"># use IO.binread instead of IO.read, and it just works!</span>
</span><span class='line'>          <span class="n">zos</span><span class="o">.</span><span class="n">print</span> <span class="no">IO</span><span class="o">.</span><span class="n">binread</span><span class="p">(</span><span class="n">file</span><span class="o">.</span><span class="n">path</span><span class="p">)</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>  <span class="c1"># End of the block  automatically closes the file.</span>
</span><span class='line'>  <span class="c1"># Send it using the right mime type, with a download window and some nice file name.</span>
</span><span class='line'>  <span class="n">send_file</span> <span class="n">t</span><span class="o">.</span><span class="n">path</span><span class="p">,</span> <span class="ss">:type</span> <span class="o">=&gt;</span> <span class="s1">&#39;application/zip&#39;</span><span class="p">,</span> <span class="ss">:disposition</span> <span class="o">=&gt;</span> <span class="s1">&#39;attachment&#39;</span><span class="p">,</span> <span class="ss">:filename</span> <span class="o">=&gt;</span> <span class="s2">&quot;some-brilliant-file-name.zip&quot;</span>
</span><span class='line'>  <span class="c1"># The temp file will be deleted some time...</span>
</span><span class='line'>  <span class="n">t</span><span class="o">.</span><span class="n">close</span>
</span><span class='line'>  
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[tomcat No Class Error]]></title>
    <link href="http://tech.lincank.info/blog/2012/04/28/tomcat-no-class-error/"/>
    <updated>2012-04-28T11:37:00+08:00</updated>
    <id>http://tech.lincank.info/blog/2012/04/28/tomcat-no-class-error</id>
    <content type="html"><![CDATA[<p>If you have the same problem in deploying your webapp with ant, in Tomcat 7. Then copy the following jars to your lib directory of ant:</p>

<pre><code>catalina-ant.jar
tomcat-coyote.jar
tomcat-util.jar
tomcat-juli.jar
</code></pre>

<p>That&#8217;s it! You will be fine:)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Django开发测试]]></title>
    <link href="http://tech.lincank.info/blog/2012/04/19/djangokai-fa-ce-shi/"/>
    <updated>2012-04-19T18:06:00+08:00</updated>
    <id>http://tech.lincank.info/blog/2012/04/19/djangokai-fa-ce-shi</id>
    <content type="html"><![CDATA[<p>测试的重要性不再赘述, 我们的系统每个模块都要有单元测试. 另一方面要确保自己写的测试代码尽可能地简单有效, 能达到目的就好. 要确保自己写的测试代码没有Bug!</p>

<h2>Python单元测试框架</h2>

<p><a href="http://pyunit.sourceforge.net/pyunit_cn.html">Python单元测试框架</a>: 简称为PyUnit, 是JUnit的Python版本. 我们的项目代码请按照这个测试框架编写.</p>

<h2>浏览器脚本测试</h2>

<p><a href="https://addons.mozilla.org/en-US/firefox/addon/imacros-for-firefox/">iMacros</a>: 有FireFox版及Chrome版, 可以记录浏览器里的鼠标及键盘行为, 在浏览器实现自动测试.</p>

<h2>JavaScript调试</h2>

<ul>
<li>FireFox: FireBug</li>
<li>Chrome: 内置有调试器</li>
</ul>

]]></content>
  </entry>
  
</feed>
